knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("collocate_results_combined_fact_new_ver/results/ufa_results.txt", header = TRUE, sep = ",", check.names = FALSE)
data <- read.csv("C:\Users\Igiba\Documents\fact_fiction_project\collocations_and_ufa\collocate_results_combined_fact_new_ver\results\ufa_result.txt", header = TRUE, sep = ",", check.names = FALSE)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
#Calculate Gwet's AC1; b...input data frame
i = 1; v <- c(); while(i+1 < ncol(b)) {n=(gwet.ac1.raw(b[,i:(i+2)])[3]);v<- c(v, n); i= i+1; }
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
#Calculate Gwet's AC1; b...input data frame
i = 1; v <- c(); while(i+1 < ncol(b)) {n=(gwet.ac1.raw(b[,i:(i+2)])[3]);v<- c(v, n); i= i+1; }
# Calculate Gwet's AC1
i <- 1
v <- c()
while (i + 2 <= length(values)) {
n <- gwet.ac1.raw(values[i:(i+2)])[3]
v <- c(v, n)
i <- i + 1
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(irrCAC)  # For gwet.ac1.raw function
# Function to install and load required packages
install_and_load <- function(package) {
if (!require(package, character.only = TRUE)) {
install.packages(package)
library(package, character.only = TRUE)
}
}
# Install and load required packages
install_and_load("ggplot2")
install_and_load("irrCAC")
install_and_load("mgcv")
# Load the data
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
# Prepare the data
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Calculate Gwet's AC1
i <- 1
v <- c()
while (i + 2 <= length(values)) {
n <- gwet.ac1.raw(values[i:(i+2)])[3]
v <- c(v, n)
i <- i + 1
}
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(ggplot2, irrCAC, mgcv)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Calculate Gwet's AC1
i <- 1
v <- c()
while (i + 2 <= length(values)) {
n <- gwet.ac1.raw(values[i:(i+2)])[3]
v <- c(v, n)
i <- i + 1
}
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Calculate Gwet's AC1
i <- 1
v <- c()
while (i + 2 <= length(values)) {
n <- gwet.ac1.raw(values[i:(i+2)])[3]
v <- c(v, n)
i <- i + 1
}
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(ggplot2, irrCAC, mgcv)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Calculate Gwet's AC1
i <- 1
v <- c()
while (i + 2 <= length(values)) {
n <- gwet.ac1.raw(values[i:(i+2)])[3]
v <- c(v, n)
i <- i + 1
}
knitr::opts_chunk$set(echo = TRUE)
# Load required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, irrCAC, mgcv)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
i <- 1
v <- c()
while (i + 2 <= length(values)) {
n <- gwet.ac1.raw(values[i:(i+2)])[3]
v <- c(v, n)
i <- i + 1
}
i <- 1
v <- c()
while (i + 2 <= length(values)) {
n <- gwet.ac1.raw(values[i:(i+2)])[3]
v <- c(v, n)
i <- i + 1
}
knitr::opts_chunk$set(echo = TRUE)
# Load required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, irrCAC, mgcv)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
# Display the structure of the data
str(data)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Display the first few values
head(values)
calculate_ac1 <- function(values) {
i <- 1
v <- c()
while (i + 2 <= length(values)) {
tryCatch({
subset <- as.matrix(values[i:(i+2)])
if (any(is.na(subset))) {
warning(paste("NA values found at index", i))
n <- NA
} else {
n <- gwet.ac1.raw(subset)[3]
}
v <- c(v, n)
}, error = function(e) {
warning(paste("Error at index", i, ":", e$message))
v <- c(v, NA)
})
i <- i + 1
}
return(v)
}
v <- calculate_ac1(values)
# Prepare data frame for plotting
g <- data.frame(Year = years[1:(length(years)-2)], AC1 = v)
# Set the range for x-axis
from <- min(g$Year)
to <- max(g$Year)
# Display the first few rows of the result
head(g)
# Create the plot
p <- ggplot(g, aes(x = Year, y = AC1)) +
geom_point() +
xlim(from, to) +
scale_x_continuous(breaks = seq(from, to, by = 10)) +
xlab("Time") +
ylab("AC1") +
ggtitle("UFA Plot for 'matter'") +
theme_minimal()
# Add smoothing
p <- p +
stat_smooth(method = "gam",
formula = y ~ s(x, bs = "cr", fx = FALSE, k = 10),
size = 1,
fill = "#707070",
level = 0.95) +
stat_smooth(method = "gam",
formula = y ~ s(x, bs = "cr", fx = FALSE, k = 10),
size = 1,
fill = "#FFFF00",
level = 0.99)
# Display the plot
print(p)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
# Display the structure of the data
str(data)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Display the first few values
head(values)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
# Display the structure of the data
#str(data)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Display the first few values
#head(values)
calculate_ac1 <- function(values) {
i <- 1
v <- c()
while (i + 2 <= length(values)) {
tryCatch({
subset <- as.matrix(values[i:(i+2)])
if (any(is.na(subset))) {
warning(paste("NA values found at index", i))
n <- NA
} else {
n <- gwet.ac1.raw(subset)[3]
}
v <- c(v, n)
}, error = function(e) {
warning(paste("Error at index", i, ":", e$message))
v <- c(v, NA)
})
i <- i + 1
}
return(v)
}
v <- calculate_ac1(values)
# Prepare data frame for plotting
g <- data.frame(Year = years[1:(length(years)-2)], AC1 = v)
# Set the range for x-axis
from <- min(g$Year)
to <- max(g$Year)
# Display the first few rows of the result
head(g)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
# Display the structure of the data
#str(data)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Display the first few values
#head(values)
View(data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(irrCAC)  # for Gwet's AC1
library(mgcv)    # for GAM
# Read the data
data_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
raw_data <- read.csv(data_path, header = TRUE, check.names = FALSE)
# Prepare the data
collocate_data <- raw_data %>%
column_to_rownames("Collocate") %>%
select(-contains("Nodes")) %>%
select(starts_with("Start:"))
knitr::opts_chunk$set(echo = TRUE)
# Load required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, irrCAC, mgcv)
file_path <- "C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt"
data <- read.csv(file_path, header = TRUE, sep = ",", check.names = FALSE)
# Display the structure of the data
#str(data)
collocate <- data$Collocate
years <- as.numeric(sub("Start:(\\d+)_Nodes.*", "\\1", colnames(data)[-1]))
values <- as.numeric(data["matter", -1])
# Display the first few values
#head(values)
View(g)
knitr::opts_chunk$set(echo = TRUE)
# Load required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, irrCAC, mgcv)
# Load necessary libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, dplyr, mgcv)
# Read the data from the text file
# Assuming the file is structured as: "Year, Frequency"
data <- read.table("results.txt", header = FALSE, sep = ",")
# Load necessary libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, dplyr, mgcv)
# Read the data from the text file
# Assuming the file is structured as: "Year, Frequency"
data <- read.table("C:\Users\Igiba\Documents\fact_fiction_project\collocations_and_ufa\collocate_results_combined_fact_new_ver\results\ufa_result.txt", header = FALSE, sep = ",")
# Load necessary libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, dplyr, mgcv)
# Read the data from the text file
# Assuming the file is structured as: "Year, Frequency"
data <- read.table("C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt", header = FALSE, sep = ",")
# Rename the columns for clarity
colnames(data) <- c("Year", "Frequency")
# Prepare the data for plotting
# Use the entire range of years from 1665 to 2024
from <- min(data$Year)
to <- max(data$Year)
# Plot the data using ggplot2
p <- ggplot(data, aes(x = Year, y = Frequency)) +
xlim(from, to) +
scale_x_continuous(breaks = seq(from, to, by = 10)) +
geom_point() +
xlab("Year") +
ylab("Collocate Frequency")
# Load data
data <- read.table("path/to/your/results.txt", header = FALSE, sep = ",")
# Load data
# Define the range of years
from <- 1665
to <- 2024
# Prepare the data frame
h <- seq(from, to, by = 1)  # This creates a sequence of years from 1665 to 2024
v <- data[, 2]  # Assuming the second column holds the relevant collocate values
g <- data.frame(h, v)  # Create the data frame with years and values
# Load necessary libraries
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, dplyr, mgcv)
# Read the data from the text file
# Assuming the file is structured as: "Year, Frequency"
data <- read.table("C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt", header = FALSE, sep = ",")
# Rename the columns for clarity
colnames(data) <- c("Year", "Frequency")
# Prepare the data for plotting
# Use the entire range of years from 1665 to 2024
from <- min(data$Year)
to <- max(data$Year)
# Plot the data using ggplot2
p <- ggplot(data, aes(x = Year, y = Frequency)) +
xlim(from, to) +
scale_x_continuous(breaks = seq(from, to, by = 10)) +
geom_point() +
xlab("Year") +
ylab("Collocate Frequency")
knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, dplyr, mgcv)
# Read the data from the text file
# Assuming the file is structured as: "Year, Frequency"
data <- read.table("C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt", header = FALSE, sep = ",")
# Rename the columns for clarity
colnames(data) <- c("Year", "Frequency")
# Prepare the data for plotting
# Use the entire range of years from 1665 to 2024
from <- min(data$Year)
to <- max(data$Year)
# Plot the data using ggplot2
p <- ggplot(data, aes(x = Year, y = Frequency)) +
xlim(from, to) +
scale_x_continuous(breaks = seq(from, to, by = 10)) +
geom_point() +
xlab("Year") +
ylab("Collocate Frequency")
# Load necessary packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, dplyr, mgcv)
# Read the data from the text file
data <- read.table("C:/Users/Igiba/Documents/fact_fiction_project/collocations_and_ufa/collocate_results_combined_fact_new_ver/results/ufa_result.txt", header = FALSE, sep = ",")
colnames(data) <- c("Year", "Frequency")
# Ensure 'Year' is numeric and handle non-numeric or missing values
data$Year <- as.numeric(as.character(data$Year))
# Check if there are any missing or invalid values
if (any(is.na(data$Year))) {
# Handle missing or invalid year data, for example, by removing them
data <- data %>% filter(!is.na(Year))
}
View(data)
