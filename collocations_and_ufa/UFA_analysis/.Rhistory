subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
filtered_data <- data %>%
filter(mi_score >= 3)
# Create the plot
detailed_plot <- filtered_data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = frequency, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "Frequency",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
scale_x_continuous(breaks = c(seq(
min(filtered_data$year), max(filtered_data$year), by = 20
), # 1958), # Add 1958 explicitly to the breaks
limits = c(min(filtered_data$year), max(filtered_data$year))))  # Ensure the full range is displayed)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
print(p3_detailed)
print(p4_detailed)
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
filtered_data <- data %>%
filter(mi_score >= 3)
# Create the plot
detailed_plot <- filtered_data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = frequency, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "Frequency",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
scale_x_continuous(
breaks = seq(min(filtered_data$year),
max(filtered_data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
print(p3_detailed)
print(p4_detailed)
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
filtered_data <- data %>%
filter(mi_score >= 3)
# Create the plot
detailed_plot <- filtered_data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = frequency, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "Frequency",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
#scale_x_continuous(breaks = seq(min(filtered_data$year), max(filtered_data$year), by = 20)) +
scale_x_continuous(breaks = c(seq(
min(filtered_data$year), max(filtered_data$year), by = 20
), 1947), # Add 1947 explicitly to the breaks
limits = c(min(filtered_data$year), max(filtered_data$year)))  # Ensure the full range is displayed)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
filtered_data <- data %>%
filter(mi_score >= 3)
# Create the plot
detailed_plot <- filtered_data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = frequency, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "Frequency",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
#scale_x_continuous(breaks = seq(min(filtered_data$year), max(filtered_data$year), by = 20)) +
scale_x_continuous(breaks = c(seq(
min(filtered_data$year), max(filtered_data$year), by = 20
), 1958), # Add 1958 explicitly to the breaks
limits = c(min(filtered_data$year), max(filtered_data$year)))  # Ensure the full range is displayed)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
print(p3_detailed)
print(p4_detailed)
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
filtered_data <- data %>%
filter(mi_score >= 3)
# Create the plot
detailed_plot <- filtered_data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = frequency, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "Frequency",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
#scale_x_continuous(breaks = seq(min(filtered_data$year), max(filtered_data$year), by = 20)) +
scale_x_continuous(breaks = c(seq(
min(filtered_data$year), max(filtered_data$year), by = 20
), 1947), # Add 1958 explicitly to the breaks
limits = c(min(filtered_data$year), max(filtered_data$year)))  # Ensure the full range is displayed)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
print(p3_detailed)
print(p4_detailed)
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
filtered_data <- data %>%
filter(mi_score >= 3)
# Create the plot
detailed_plot <- filtered_data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = frequency, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "Frequency",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
#scale_x_continuous(breaks = seq(min(filtered_data$year), max(filtered_data$year), by = 20)) +
scale_x_continuous(
breaks = c(seq(
min(filtered_data$year), max(filtered_data$year), by = 20
), 1947),
# Add 1947 explicitly to the breaks
limits = c(min(filtered_data$year), max(filtered_data$year)),
# Ensure the full range is displayed
expand = c(0, 0)  # No extra space on the x-axis
) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
)  # Rotate x-axis labels to avoid overlap)
# Save the plot if requested
if(save_plot) {
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
filtered_data <- data %>%
filter(mi_score >= 3)
# Create the plot
detailed_plot <- filtered_data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = frequency, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "Frequency",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
#scale_x_continuous(breaks = seq(min(filtered_data$year), max(filtered_data$year), by = 20)) +
scale_x_continuous(
breaks = c(seq(
min(filtered_data$year), max(filtered_data$year), by = 20
), 1947),
# Add 1947 explicitly to the breaks
limits = c(min(filtered_data$year), max(filtered_data$year)),
# Ensure the full range is displayed
expand = c(0, 0)  # No extra space on the x-axis
) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
))  # Rotate x-axis labels to avoid overlap)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
print(p3_detailed)
print(p4_detailed)
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
filtered_data <- data %>%
filter(mi_score >= 3)
# Create the plot
detailed_plot <- filtered_data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = frequency, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "Frequency",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
#scale_x_continuous(breaks = seq(min(filtered_data$year), max(filtered_data$year), by = 20)) +
scale_x_continuous(
breaks = c(seq(
min(filtered_data$year), max(filtered_data$year), by = 20
), 1947),
# Add 1947 explicitly to the breaks
limits = c(min(filtered_data$year), max(filtered_data$year)),
# Ensure the full range is displayed
) +
theme(axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
))  # Rotate x-axis labels to avoid overlap)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
print(p3_detailed)
print(p4_detailed)
