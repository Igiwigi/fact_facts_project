if(save_plot) {
filename <- file.path(output_dir,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# Function for simple timeline visualization
create_simple_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = FALSE,
output_dir = "collocate_results") {
# Create the plot
simple_plot <- data %>%
ggplot(aes(x = year, y = word)) +
geom_point(color = "#2c7fb8", alpha = 0.7) +
theme_minimal(base_size = 12) +
labs(
title = paste("Timeline of Collocates for '", target_word, "' (", window_size, ")", sep=""),
x = "Year",
y = "Collocate"
) +
theme(
plot.title = element_text(size = 14, face = "bold", margin = margin(b = 20)),
axis.text.y = element_text(size = 9),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
plot.margin = margin(1, 1, 1, 1, "cm")
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_dir,
paste0(target_word, "_collocate_timeline_",
window_size, ".png"))
ggsave(filename, simple_plot, width = 12, height = 8, dpi = 300)
}
return(simple_plot)
}
# Example usage for all your datasets:
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
p1_simple <- create_simple_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
p2_simple <- create_simple_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
p3_simple <- create_simple_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
p4_simple <- create_simple_collocate_plot(results4$all_data, "facts", "5L5R")
print(p1_detailed)
print(p2_detailed)
print(p3_detailed)
print(p4_detailed)
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = FALSE,
output_dir = "collocate_results") {
data <- data %>%
mutate(word = ifelse(word == "i", "I", word))
# Create the plot
detailed_plot <- data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = mi_score, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_minimal(base_size = 12) +
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "MI Score",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95")
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_dir,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# Function for simple timeline visualization
create_simple_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = FALSE,
output_dir = "collocate_results") {
# Create the plot
simple_plot <- data %>%
ggplot(aes(x = year, y = word)) +
geom_point(color = "#2c7fb8", alpha = 0.7) +
theme_minimal(base_size = 12) +
labs(
title = paste("Timeline of Collocates for '", target_word, "' (", window_size, ")", sep=""),
x = "Year",
y = "Collocate"
) +
theme(
plot.title = element_text(size = 14, face = "bold", margin = margin(b = 20)),
axis.text.y = element_text(size = 9),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
plot.margin = margin(1, 1, 1, 1, "cm")
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_dir,
paste0(target_word, "_collocate_timeline_",
window_size, ".png"))
ggsave(filename, simple_plot, width = 12, height = 8, dpi = 300)
}
return(simple_plot)
}
# Example usage for all your datasets:
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
p1_simple <- create_simple_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
p2_simple <- create_simple_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
p3_simple <- create_simple_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
p4_simple <- create_simple_collocate_plot(results4$all_data, "facts", "5L5R")
print(p1_detailed)
print(p2_detailed)
print(p3_detailed)
print(p4_detailed)
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = FALSE,
output_dir = "collocate_results") {
# Create the plot
detailed_plot <- data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = mi_score, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_minimal(base_size = 12) +
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "MI Score",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95")
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_dir,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# Function for simple timeline visualization
create_simple_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = FALSE,
output_dir = "collocate_results") {
# Create the plot
simple_plot <- data %>%
ggplot(aes(x = year, y = word)) +
geom_point(color = "#2c7fb8", alpha = 0.7) +
theme_minimal(base_size = 12) +
labs(
title = paste("Timeline of Collocates for '", target_word, "' (", window_size, ")", sep=""),
x = "Year",
y = "Collocate"
) +
theme(
plot.title = element_text(size = 14, face = "bold", margin = margin(b = 20)),
axis.text.y = element_text(size = 9),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
plot.margin = margin(1, 1, 1, 1, "cm")
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_dir,
paste0(target_word, "_collocate_timeline_",
window_size, ".png"))
ggsave(filename, simple_plot, width = 12, height = 8, dpi = 300)
}
return(simple_plot)
}
# Example usage for all your datasets:
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
p1_simple <- create_simple_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
p2_simple <- create_simple_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
p3_simple <- create_simple_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
p4_simple <- create_simple_collocate_plot(results4$all_data, "facts", "5L5R")
print(p1_detailed)
print(p2_detailed)
print(p3_detailed)
print(p4_detailed)
#3l3r
library(knitr)
folder_to_ignore <- c("5window", "old/5window", "old/3window")
files <- list.files("collocate_results/",
pattern = "_ufa\\.png$",
full.names = TRUE,
recursive = TRUE)
files <- files[!grepl(paste(folder_to_ignore, collapse = "|"), files) & grepl("3window", files)]
if (length(files) == 0) {
print("No images found with '_ufa.png' in the filename.")
} else {
include_graphics(files)
}
#5l5r
folder_to_ignore <- c("3window", "old/5window", "old/3window")
files <- list.files("collocate_results/",
pattern = "_ufa\\.png$",
full.names = TRUE,
recursive = TRUE)
files <- files[!grepl(paste(folder_to_ignore, collapse = "|"), files) & grepl("5window", files)]
# Check if there are files left, then plot or print a message
if (length(files) == 0) {
print("No images found with '_ufa.png' in the filename.")
} else {
include_graphics(files)
}
print(p1_detailed)
print(p2_detailed)
print(p3_detailed)
print(p4_detailed)
print(p1_detailed)
print(p2_detailed)
print(p3_detailed)
print(p4_detailed)
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
# Create the plot
detailed_plot <- data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = mi_score, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_minimal(base_size = 12) +
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "MI Score",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95")
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# Function for simple timeline visualization
create_simple_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = FALSE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
# Create the plot
simple_plot <- data %>%
ggplot(aes(x = year, y = word)) +
geom_point(color = "#2c7fb8", alpha = 0.7) +
theme_minimal(base_size = 12) +
labs(
title = paste("Timeline of Collocates for '", target_word, "' (", window_size, ")", sep=""),
x = "Year",
y = "Collocate"
) +
theme(
plot.title = element_text(size = 14, face = "bold", margin = margin(b = 20)),
axis.text.y = element_text(size = 9),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
plot.margin = margin(1, 1, 1, 1, "cm")
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_timeline_",
window_size, ".png"))
ggsave(filename, simple_plot, width = 12, height = 8, dpi = 300)
}
return(simple_plot)
}
# Example usage for all your datasets:
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
p1_simple <- create_simple_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
p2_simple <- create_simple_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
p3_simple <- create_simple_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
p4_simple <- create_simple_collocate_plot(results4$all_data, "facts", "5L5R")
library(ggplot2)
library(dplyr)
# Function for detailed visualization with MI scores
create_detailed_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = TRUE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
# Create the plot
detailed_plot <- data %>%
arrange(year, desc(mi_score)) %>%
ggplot(aes(x = year, y = reorder(word, mi_score))) +
geom_point(aes(size = mi_score, color = mi_score)) +
scale_color_viridis_c(option = "plasma") +
scale_size_continuous(range = c(2, 6)) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Distribution of Collocates for '", target_word, "' Over Time (", window_size, ")", sep=""),
x = "Year",
y = "Collocate",
size = "MI Score",
color = "MI Score"
) +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 8),
legend.position = "right",
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_distribution_",
window_size, ".png"))
ggsave(filename, detailed_plot, width = 15, height = 10, dpi = 300)
}
return(detailed_plot)
}
# Function for simple timeline visualization
create_simple_collocate_plot <- function(data,
target_word = "fact/facts",
window_size = "3L3R",
save_plot = FALSE,
output_dir = "collocate_results") {
# Define subdirectory based on window size
subdirectory <- ifelse(window_size == "3L3R", "3window", "5window")
output_path <- file.path(output_dir, subdirectory)
# Ensure output directory exists
if (!dir.exists(output_path)) {
dir.create(output_path, recursive = TRUE)
}
# Create the plot
simple_plot <- data %>%
ggplot(aes(x = year, y = word)) +
geom_point(color = "#2c7fb8", alpha = 0.7) +
theme_bw(base_size = 12) +  # Changed to theme_bw for white background
labs(
title = paste("Timeline of Collocates for '", target_word, "' (", window_size, ")", sep=""),
x = "Year",
y = "Collocate"
) +
theme(
plot.title = element_text(size = 14, face = "bold", margin = margin(b = 20)),
axis.text.y = element_text(size = 9),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_line(color = "gray95"),
plot.margin = margin(1, 1, 1, 1, "cm"),
panel.background = element_rect(fill = "white", color = NA)  # Ensures background is white
) +
scale_x_continuous(
breaks = seq(min(data$year),
max(data$year),
by = 20)
)
# Save the plot if requested
if(save_plot) {
filename <- file.path(output_path,
paste0(target_word, "_collocate_timeline_",
window_size, ".png"))
ggsave(filename, simple_plot, width = 12, height = 8, dpi = 300)
}
return(simple_plot)
}
# Example usage for all your datasets:
# For fact 3L3R
p1_detailed <- create_detailed_collocate_plot(results1$all_data, "fact", "3L3R")
p1_simple <- create_simple_collocate_plot(results1$all_data, "fact", "3L3R")
# For facts 3L3R
p2_detailed <- create_detailed_collocate_plot(results2$all_data, "facts", "3L3R")
p2_simple <- create_simple_collocate_plot(results2$all_data, "facts", "3L3R")
# For fact 5L5R
p3_detailed <- create_detailed_collocate_plot(results3$all_data, "fact", "5L5R")
p3_simple <- create_simple_collocate_plot(results3$all_data, "fact", "5L5R")
# For facts 5L5R
p4_detailed <- create_detailed_collocate_plot(results4$all_data, "facts", "5L5R")
p4_simple <- create_simple_collocate_plot(results4$all_data, "facts", "5L5R")
