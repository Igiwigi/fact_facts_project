geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot1 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distribution by Year", "Keyword")
rstl_plot2 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distribution by Year", "Category")
rstl_plot3 <- create_pie_chart(rstl_data, word_counts, "RSTL: Distribution of Categories", "Category")
rstl_grid <- grid.arrange(rstl_plot1, rstl_plot2, rstl_plot3, ncol = 2, top = "Royal Society RSTL (Normalized)")
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot1 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
rstl_plot2 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Category")
rstl_plot3 <- create_pie_chart(rstl_data, word_counts, "RSTL: Distribution of Categories", "Category")
rstl_grid <- grid.arrange(rstl_plot1, rstl_plot2, rstl_plot3, ncol = 2, top = "Royal Society RSTL (Normalized)")
plot_word_distribution_by_year <- function(data, title, group_var = "Category") {
# Get the min and max years
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
ggplot(aes(x = Year, y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "Count of words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
# Get default breaks
default_breaks <- scales::pretty_breaks()(x)
# Add min and max years if they're not already included
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, title, group_var = "Category") {
summary_data <- data %>%
group_by(!!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_count) * 100, 2))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot1 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rs_plot1 <- plot_word_distribution_by_year(rstl_data, "RSTL: Distribution by Year", "Keyword")
rs_plot2 <- plot_word_distribution_by_year(rstl_data, "RSTL: Distribution by Year", "Category")
rs_plot3 <- create_pie_chart(rstl_data, "RSTL: Distribution of Categories", "Category")
rs_grid <- grid.arrange(rs_plot1, rs_plot2, rs_plot3, ncol = 2, top = "Royal society RSTL")
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot1 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
# Get the min and max years
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
# Prepare word_counts data
word_counts <- word_counts %>%
rename(Year = 1, TotalWords = 2) %>%
mutate(Year = as.numeric(Year))
# Prepare and join data
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = "Year") %>%
mutate(ratio = count / TotalWords * 1000)  # Multiply by 1000 for readability
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "Occurrences per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
# Update the create_pie_chart function to use percentages based on total word count
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$Word.Count)
summary_data <- data %>%
group_by(!!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot1 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
rstl_plot2 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Category")
rstl_plot3 <- create_pie_chart(rstl_data, word_counts, "RSTL: Distribution of Categories", "Category")
rstl_grid <- grid.arrange(rstl_plot1, rstl_plot2, rstl_plot3, ncol = 2, top = "Royal Society RSTL (Normalized)")
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
word_counts <- word_counts %>%
rename(Year = 1, TotalWords = 2) %>%
mutate(Year = as.numeric(Year))
# Prepare and join data
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = "Year") %>%
mutate(ratio = count / TotalWords * 1000)  # Multiply by 1000 for readability
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
# Update the create_pie_chart function to use percentages based on total word count
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$Word.Count)
summary_data <- data %>%
group_by(!!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot1 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
rstl_plot2 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Category")
rstl_plot3 <- create_pie_chart(rstl_data, word_counts, "RSTL: Distribution of Categories", "Category")
rstl_grid <- grid.arrange(rstl_plot1, rstl_plot2, rstl_plot3, ncol = 2, top = "Royal Society RSTL (Normalized)")
rstb_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
#odd formatting of years
rstb_plot1 <- plot_word_distribution_by_year(rstb_data, "RSTB: Distribution by Year", "Keyword")
rstb_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
#odd formatting of years
rstb_plot1 <- plot_word_distribution_by_year(rstb_data, word_counts, "RSTB: Distribution by Year", "Keyword")
rstb_data <- fix_dates_data(rstb_data)
rstb_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
#odd formatting of years
rstb_plot1 <- plot_word_distribution_by_year(rstb_data, word_counts, "RSTB: Distribution by Year", "Keyword")
rstb_plot2 <- plot_word_distribution_by_year(rstb_data, word_counts, "RSTB: Distribution by Year", "Category")
rstb_plot3 <- create_pie_chart(rstb_data, word_counts, "RSTB: Distribution of Categories", "Category")
rstb_grid <- grid.arrange(rstb_plot1, rstb_plot2, rstb_plot3, ncol = 2, top = "RSTB")
rstb_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
#odd formatting of years
rstb_plot2 <- plot_word_distribution_by_year(rstb_data, word_counts, "RSTB: Distribution by Year", "Category")
rstb_plot3 <- create_pie_chart(rstb_data, word_counts, "RSTB: Distribution of Categories", "Category")
rstb_grid <- grid.arrange( rstb_plot2, rstb_plot3, ncol = 2, top = "RSTB")
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot2 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Category")
rstl_plot3 <- create_pie_chart(rstl_data, word_counts, "RSTL: Distribution of Categories", "Category")
rstl_grid <- grid.arrange(rstl_plot2, rstl_plot3, ncol = 2, top = "Royal Society RSTL (Normalized)")
rstl_plot1 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Distribution by Year", "Category")
plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Distribution by Year", "Category")
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(ggplot2, dplyr, tidyr, readr, readxl, lubridate, gridExtra)
#date fix
library(lubridate)
fix_dates_data <- function(dataframe) {
if ("Date" %in% names(dataframe) &&
is.character(dataframe[["Date"]])) {
fix_date_format <- function(date_str) {
parsed_date <- parse_date_time(date_str, orders = c("ymd", "ym"))
if (is.na(parsed_date) &&
grepl("^\\d{4}-\\d{1,2}$", date_str)) {
parsed_date <- parse_date_time(paste0(date_str, "-01"), orders = "ymd")
}
if (!is.na(parsed_date)) {
return(format(parsed_date, "%Y-%m-%d"))
} else {
return(NA_character_)
}
}
dataframe[["Date"]] <- sapply(dataframe[["Date"]], fix_date_format)
failed_parses <- is.na(dataframe[["Date"]])
if (any(failed_parses)) {
cat("Values in the 'Date' column that failed to parse:\n")
print(dataframe[["Date"]][failed_parses])
} else {
cat("All values in the 'Date' column are now correctly formatted as YYYY-MM-DD.\n")
}
} else {
cat("The 'Date' column is missing or is not of character type.\n")
}
return(dataframe)
}
load_and_preprocess_data <- function(file_path) {
data <- read_excel(file_path, sheet = 1)
data$Keyword <- as.factor(data$Keyword)
data$Filename <- as.factor(data$Filename)
data <- data %>%
mutate(Category = case_when(
grepl("fac", Keyword, ignore.case = TRUE) ~ "fact",
grepl("fic", Keyword, ignore.case = TRUE) ~ "fiction",
TRUE ~ "other"
))
return(data)
}
rstl_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate.xlsx")
s_data <- load_and_preprocess_data("../ff_spectator_words_found_context_separate.xlsx")
rstb_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTB.xlsx")
word_counts <- rbind(read.csv("word_counts_rstb.csv"), read.csv("word_counts_rstl.csv"))
s_data %>% #spectator
group_by(Keyword) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_data %>% #royal society
group_by(Keyword) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstb_data %>% #royal society
group_by(Keyword) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total = sum(count), percentage = round((count / total) * 100, 1))
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
word_counts <- word_counts %>%
rename(Year = 1, TotalWords = 2) %>%
mutate(Year = as.numeric(Year))
# Prepare and join data
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = "Year") %>%
mutate(ratio = count / TotalWords * 1000)
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$Word.Count)
summary_data <- data %>%
group_by(!!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot2 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Category")
rstl_plot3 <- create_pie_chart(rstl_data, word_counts, "RSTL: Distribution of Categories", "Category")
rstl_grid <- grid.arrange(rstl_plot2, rstl_plot3, ncol = 2, top = "Royal Society RSTL (Normalized)")
plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
rstb_data <- fix_dates_data(rstb_data)
write_xlsx(rstb_data, "../ff_royal_society_words_found_context_separate_RSTB.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(ggplot2, dplyr, tidyr, readr, readxl, lubridate, gridExtra)
#date fix
library(lubridate)
fix_dates_data <- function(dataframe) {
if ("Date" %in% names(dataframe) &&
is.character(dataframe[["Date"]])) {
fix_date_format <- function(date_str) {
parsed_date <- parse_date_time(date_str, orders = c("ymd", "ym"))
if (is.na(parsed_date) &&
grepl("^\\d{4}-\\d{1,2}$", date_str)) {
parsed_date <- parse_date_time(paste0(date_str, "-01"), orders = "ymd")
}
if (!is.na(parsed_date)) {
return(format(parsed_date, "%Y-%m-%d"))
} else {
return(NA_character_)
}
}
dataframe[["Date"]] <- sapply(dataframe[["Date"]], fix_date_format)
failed_parses <- is.na(dataframe[["Date"]])
if (any(failed_parses)) {
cat("Values in the 'Date' column that failed to parse:\n")
print(dataframe[["Date"]][failed_parses])
} else {
cat("All values in the 'Date' column are now correctly formatted as YYYY-MM-DD.\n")
}
} else {
cat("The 'Date' column is missing or is not of character type.\n")
}
return(dataframe)
}
load_and_preprocess_data <- function(file_path) {
data <- read_excel(file_path, sheet = 1)
data$Keyword <- as.factor(data$Keyword)
data$Filename <- as.factor(data$Filename)
data <- data %>%
mutate(Category = case_when(
grepl("fac", Keyword, ignore.case = TRUE) ~ "fact",
grepl("fic", Keyword, ignore.case = TRUE) ~ "fiction",
TRUE ~ "other"
))
return(data)
}
rstl_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate.xlsx")
s_data <- load_and_preprocess_data("../ff_spectator_words_found_context_separate.xlsx")
rstb_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTB.xlsx")
word_counts <- rbind(read.csv("word_counts_rstb.csv"), read.csv("word_counts_rstl.csv"))
s_data %>% #spectator
group_by(Keyword) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_data %>% #royal society
group_by(Keyword) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstb_data %>% #royal society
group_by(Keyword) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total = sum(count), percentage = round((count / total) * 100, 1))
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
word_counts <- word_counts %>%
rename(Year = 1, TotalWords = 2) %>%
mutate(Year = as.numeric(Year))
# Prepare and join data
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = "Year") %>%
mutate(ratio = count / TotalWords * 1000)
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$Word.Count)
summary_data <- data %>%
group_by(!!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
rstl_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
rstl_plot2 <- plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Category")
rstl_plot3 <- create_pie_chart(rstl_data, word_counts, "RSTL: Distribution of Categories", "Category")
rstl_grid <- grid.arrange(rstl_plot2, rstl_plot3, ncol = 1, top = "Royal Society RSTL (Normalized)")
plot_word_distribution_by_year(rstl_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
library(writexl)
library(writexl)
rstb_data <- fix_dates_data(rstb_data)
write_xlsx(rstb_data, "../ff_royal_society_words_found_context_separate_RSTB.xlsx")
rstb_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
#odd formatting of years
rstb_plot2 <- plot_word_distribution_by_year(rstb_data, word_counts, "RSTB: Distribution by Year", "Category")
rstb_plot3 <- create_pie_chart(rstb_data, word_counts, "RSTB: Distribution of Categories", "Category")
rstb_grid <- grid.arrange( rstb_plot2, rstb_plot3, ncol = 2, top = "RSTB")
plot_word_distribution_by_year(rstb_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
rstb_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
#odd formatting of years
rstb_plot2 <- plot_word_distribution_by_year(rstb_data, word_counts, "RSTB: Distribution by Year", "Category")
rstb_plot3 <- create_pie_chart(rstb_data, word_counts, "RSTB: Distribution of Categories", "Category")
rstb_grid <- grid.arrange( rstb_plot2, rstb_plot3, ncol = 1, top = "RSTB")
plot_word_distribution_by_year(rstb_data, word_counts, "RSTL: Normalized Distr. by Year", "Keyword")
#this omits the unclear dates out of analysis though since they cant parse as Dates :(
#Maybe fix later (preface esp)
s_data <- s_data %>%
mutate(Date = ifelse(Date == "unclear", NA, Date),
Year = year(Date))
s_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
s_plot1 <- plot_word_distribution_by_year(s_data, "Spectator: Distr. by Year", "Keyword")
#this omits the unclear dates out of analysis though since they cant parse as Dates :(
#Maybe fix later (preface esp)
s_data <- s_data %>%
mutate(Date = ifelse(Date == "unclear", NA, Date),
Year = year(Date))
s_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
s_plot1 <- plot_word_distribution_by_year(s_data, word_counts, "Spectator: Distr. by Year", "Keyword")
s_plot2 <- plot_word_distribution_by_year(s_data,word_counts, "Spectator: Distr. by Year", "Category")
s_plot3 <- create_pie_chart(s_data,word_counts, "Spectator: Distr. of Categories", "Category")
s_plot4 <- create_pie_chart(s_data, word_counts,"Spectator: Distr. of Keywords", "Keyword")
s_grid <- grid.arrange(s_plot1, s_plot2, s_plot3, s_plot4, ncol = 2,
top = "Spectator Data")
#this omits the unclear dates out of analysis though since they cant parse as Dates :(
#Maybe fix later (preface esp)
s_data <- s_data %>%
mutate(Date = ifelse(Date == "unclear", NA, Date),
Year = year(Date))
s_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
s_plot1 <- plot_word_distribution_by_year(s_data, word_counts, "Spectator: Distr. by Year", "Keyword")
s_plot2 <- plot_word_distribution_by_year(s_data, word_counts, "Spectator: Distr. by Year", "Category")
s_plot3 <- create_pie_chart(s_data,
word_counts,
"Spectator: Distr. of Categories",
"Category")
s_plot4 <- create_pie_chart(s_data, word_counts, "Spectator: Distr. of Keywords", "Keyword")
s_grid <- grid.arrange(s_plot1,
s_plot2,
s_plot3,
s_plot4,
ncol = 2,
top = "Spectator Data")
plot_word_distribution_by_year_old <- function(data, title, group_var = "Category") {
# Get the min and max years
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
ggplot(aes(x = Year, y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "Count of words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
# Get default breaks
default_breaks <- scales::pretty_breaks()(x)
# Add min and max years if they're not already included
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart_old <- function(data, title, group_var = "Category") {
summary_data <- data %>%
group_by(!!sym(group_var)) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_count) * 100, 2))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
#this omits the unclear dates out of analysis though since they cant parse as Dates :(
#Maybe fix later (preface esp)
s_data <- s_data %>%
mutate(Date = ifelse(Date == "unclear", NA, Date),
Year = year(Date))
s_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
s_plot1 <- plot_word_distribution_by_year_old(s_data, "Spectator: Distr. by Year", "Keyword")
s_plot2 <- plot_word_distribution_by_year_old(s_data, "Spectator: Distr. by Year", "Category")
s_plot3 <- create_pie_chart_old(s_data, "Spectator: Distr. of Categories", "Category")
s_plot4 <- create_pie_chart_old(s_data, "Spectator: Distr. of Keywords", "Keyword")
s_grid <- grid.arrange(s_plot1, s_plot2, s_plot3, s_plot4, ncol = 2,
top = "Spectator Data")
rs_data <- rbind(rstl_data, rstb_data)
rs_data <- rbind(rstl_data, rstb_data)
rs_data <- rbind(rstl_data, rstb_data)
rs_data %>% group_by(Keyword) %>% summarise(count = n(), .groups = 'drop') %>% mutate(total = sum(count), percentage = round((count / total) * 100, 1))
#odd formatting of years
rs_plot2 <- plot_word_distribution_by_year(rstb_data, word_counts, "RS: Distribution by Year", "Category")
rs_plot3 <- create_pie_chart(rstb_data, word_counts, "RS: Distribution of Categories", "Category")
rs_grid <- grid.arrange( rs_plot2, rs_plot3, ncol = 1, top = "Royal Society (so far)")
plot_word_distribution_by_year(rstb_data, word_counts, "RS: Normalized Distr. by Year", "Keyword")
View(rs_data)
View(word_counts)
View(rs_data)
